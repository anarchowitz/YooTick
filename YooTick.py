# maded by. . . . . . . ANARCHOWITZ
# . . . . . . . . . . .,'¬¥`. ,'``;
# . . . . . . . . . .,`. . .`‚Äî‚Äì'..
# . . . . . . . . . .,. . . . . .~ .`- .
# . . . . . . . . . ,'. . . . . . . .o. .o__
# . . . . . . . . _l. . . . . . . . . . . .
# . . . . . . . _. '`~-.. . . . . . . . . .,'
# . . . . . . .,. .,.-~-.' -.,. . . ..'‚Äì~`
# . . . . . . /. ./. . . . .}. .` -..,/
# . . . . . /. ,'___. . :/. . . . . .
# . . . . /'`-.l. . . `'-..'........ . .
# . . . ;. . . . . . . . . . . . .)-.....l
# . . .l. . . . .' ‚Äî........-'. . . ,'
# . . .',. . ,....... . . . . . . . . .,'
# . . . .' ,/. . . . `,. . . . . . . ,'
# . . . . .. . . . . .. . . .,.- '
# . . . . . ',. . . . . ',-~'`. (.))
# . . . . . .l. . . . . ;. . . /__
# . . . . . /. . . . . /__. . . . .)
# . . . . . '-.. . . . . . .)
# . . . . . . .' - .......-`
version='2.3.6'
import os, json, datetime, requests

import disnake
from disnake.ext import commands
import asyncio  

intents = disnake.Intents.default() 
intents.message_content = True

class ButtonView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

class PersistentViewBot(commands.Bot):
    def __init__(self, activity=None):
        super().__init__(command_prefix='$', intents=intents, activity=activity)
        
        self.config_file = 'config.json'
        with open(self.config_file, 'r') as f:
            self.config = json.load(f)
        
        self.persistent_views_added = self.sent_message = self.config.get('sent_message', False)
        self.ticket_counter = self.config.get('ticket_counter', 0)
        self.staff_members = self.config.get('staff_members', {})
        self.dev_members = self.config.get('dev_members', [])
        self.TICKET_CHANNEL_ID = self.config.get('TICKET_CHANNEL_ID')
        self.REQUEST_CHANNEL_ID = self.config.get('REQUEST_CHANNEL_ID')
        self.CATEGORY_ID = self.config.get('CATEGORY_ID')
        self.config.setdefault('alert_settings', {})
        for staff_member in self.config.get('staff_members', {}):
            self.config['alert_settings'].setdefault(staff_member, True)
        
        self.config.setdefault('date_stats', {})

    def config_clear(self, user=None):
        staff_members = self.config.get('staff_members', {})
        if user:
            if user.lower() in staff_members:
                staff_members[user.lower()]['claimed_tickets'] = []
                staff_members[user.lower()]['claimed_ticket_users'] = {}
                self.config['staff_members'] = staff_members
                with open(self.config_file, 'w') as f:
                    json.dump(self.config, f, indent=4)
                return f"–ú—É—Å–æ—Ä –≤ –∫–æ–Ω—Ñ–∏–≥–µ –¥–ª—è {user} –±—ã–ª –æ—á–∏—â–µ–Ω."
            else:
                return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {user} –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ staff."
        else:
            for staff_member in staff_members:
                staff_members[staff_member]['claimed_tickets'] = []
                staff_members[staff_member]['claimed_ticket_users'] = {}
            self.config['staff_members'] = staff_members
            with open(self.config_file, 'w') as f:
                json.dump(self.config, f, indent=4)
            return "–ú—É—Å–æ—Ä –≤ –∫–æ–Ω—Ñ–∏–≥–µ –¥–ª—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±—ã–ª –æ—á–∏—â–µ–Ω."
    async def on_ready(self):
        if not self.persistent_views_added:
            self.persistent_views_added = True

        if os.path.exists(self.config_file):
            with open(self.config_file, 'r') as f:
                config = json.load(f)
            self.config.update(config)

        channel = self.get_channel(self.TICKET_CHANNEL_ID)
        if channel:
            if not self.config.get('sent_message', False):
                await asyncio.sleep(5)
                embed = disnake.Embed(
                    title="–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                    description="–ú—ã –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º **–ø–æ–¥—Ä–æ–±–Ω–æ** –æ–ø–∏—Å—ã–≤–∞—Ç—å –≤–∞—à–∏ –ø—Ä–æ—Å—å–±—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –æ–∫–∞–∑–∞—Ç—å –≤–∞–º **–±—ã—Å—Ç—Ä—É—é –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –ø–æ–º–æ—â—å**.\n\n"
                                "‚ñé–í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:\n"
                                "- –ù–µ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ —Ç–∏–∫–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º–µ –∏–ª–∏ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å –æ–ø–∏—Å–∞–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π.\n"
                                "- –£–∫–∞–∂–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–µ—à–∏—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n"
                                "- –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤.\n\n"
                                "**–ù–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —ç—Ç–∏—Ö –ø—Ä–∞–≤–∏–ª –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–∞–∫–∞–∑–∞–Ω–∏—é**.",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                embed.set_author(name='Yooma Support', icon_url="https://static2.tgstat.ru/channels/_0/a1/a1f39d6ec06f314bb9ae1958342ec5fd.jpg")
                embed.set_thumbnail(url="https://static2.tgstat.ru/channels/_0/a1/a1f39d6ec06f314bb9ae1958342ec5fd.jpg")
                view = disnake.ui.View()
                button = disnake.ui.Button(label='–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', style=disnake.ButtonStyle.green, emoji='üì®', custom_id='create_ticket')
                view.add_item(button)
                message = await channel.send(embed=embed, view=view) # type: ignore

                self.config['sent_message'] = True
                with open(self.config_file, 'r+') as f:
                    config_data = json.load(f)
                    config_data['sent_message'] = True
                    f.seek(0)
                    json.dump(config_data, f, indent=4)
                    f.truncate()

        print(f"–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –≤—Ö–æ–¥–∞ {self.user} (ID: {self.user.id})\n------") 

    async def on_message(self, message):
        if message.author == self.user:
            return

        if isinstance(message.channel, disnake.DMChannel):
            if message.content.startswith('$ss'):
                if message.author.name.lower() in 'anarchowitz':
                    args = message.content.split()
                    if len(args) > 1:
                        target_member = args[1]
                        staff_members = bot.config.get('staff_members', {})
                        average_ratings = bot.config.get('average_ratings', {})
                        if target_member in staff_members:
                            stats = staff_members[target_member]
                            closed_tickets = stats.get('closed_tickets', 0)
                            average_rating = average_ratings.get(target_member, '–ù–µ—Ç –æ—Ü–µ–Ω–∫–∏')
                            
                            embed = disnake.Embed(
                                title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è `{target_member}`",
                                color=disnake.Color.from_rgb(119, 137, 253)
                            )
                            embed.add_field(name="–ó–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤", value=closed_tickets, inline=False)
                            embed.add_field(name="–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞", value=average_rating, inline=False)
                            
                            await message.channel.send(embed=embed)
                        else:
                            await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{target_member}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.")
                    else:
                        staff_members = bot.config.get('staff_members', {})
                        average_ratings = bot.config.get('average_ratings', {})
                        sorted_staff_members = sorted(staff_members.items(), key=lambda x: x[1].get('closed_tickets', 0), reverse=True)
                        embed = disnake.Embed(
                            title="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤",
                            color=disnake.Color.from_rgb(119, 137, 253)
                        )
                        for i, (staff_member, stats) in enumerate(sorted_staff_members):
                            closed_tickets = stats.get('closed_tickets', 0)
                            average_rating = average_ratings.get(staff_member, '–ù–µ—Ç –æ—Ü–µ–Ω–∫–∏')
                            embed.add_field(name=f"–¢–æ–ø {i+1}: `{staff_member}`", value=f"–ó–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤: {closed_tickets}\n–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {average_rating}", inline=False)
                        await message.channel.send(embed=embed)
                else:
                    pass
        
        if message.content.startswith('$message'):
            if message.guild is not None:
                await message.author.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º!")
                return
            if message.author.name.lower() not in bot.config.get('dev_members', []):
                await message.author.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
                return
            parts = message.content.split(' ', 2)
            if len(parts) < 3:
                await message.author.send("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $message <user_id> <—Å–æ–æ–±—â–µ–Ω–∏–µ>")
                return
            try:
                user_id = int(parts[1])
            except ValueError:
                await message.author.send("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
                return
            msg = parts[2]
            try:
                user = await bot.fetch_user(user_id)
                await user.send(msg)
                await message.author.send(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {user.name}.")
            except disnake.NotFound:
                await message.author.send("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            except Exception as e:
                await message.author.send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: " + str(e))

        if message.content.startswith('$help'):
            await message.delete()
            args = message.content.split()
            if len(args) < 2:
                await message.channel.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ 'staff' –∏–ª–∏ 'dev' –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã $help.")
                return
            role_type = args[1].lower()
            embed = disnake.Embed(
                title=f"–†–∞–±–æ—á–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è {role_type}",
                color=disnake.Color.from_rgb(119, 137, 253)
            )
            staff_commands = [
                ("$claim", "`–í–∑—è—Ç—å —Ç–∏–∫–µ—Ç –Ω–∞ —Å–µ–±—è. [danger]`"),
                ("$close", "`–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç. [danger]`"),
                ("$alert", "`–ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –ª–∞–π–∫–∞–º/–¥–∏–∑–ª–∞–π–∫–∞–º`"),
                ("$info", "`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞.`"),
                ("$price", "`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–∞ –¥–æ–∫—É–ø–∫–∏/–∑–∞–º–æ—Ä–æ–∑–∫–∏/–ø–µ—Ä–µ–Ω–æ—Å (–¥–ª—è —Å—Ç. –∞–¥–º–∏–Ω–æ–≤)`"),
                ("$list_rights", "`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø—Ä–∞–≤–∞–º–∏.`"),
                ("$list_helper", "`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±—ã—Å—Ç—Ä—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ (—Ñ–æ—Ä–º—ã) –ø–æ —Å–ª–æ–≤–∞–º.`"),
                ("$rate_check", "`–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–∞–π–∫–æ–≤/–¥–∏–∑–ª–∞–π–∫–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞/–≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`"),
                ("$rate_top", "`–ü—Ä–æ—Å–º–æ—Ç—Ä –æ–±—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.`"),
                ("$clear_tickets", "`–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –ª—é–¥—å–º–∏ (created_tickets.json) [danger].`"),
            ]
            dev_commands = [
                ("$add_rights", "`–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.`"),
                ("$del_rights", "`–£–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`"),
                ("$edit_rights", "`–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.`"),
                ("$add_staff_role", "`–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –≤ —Å–ø–∏—Å–æ–∫ staff_roles.`"),
                ("$del_staff_role", "`–£–±—Ä–∞—Ç—å —Ä–æ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ staff_roles.`"),
                ("$secret_stats", "`–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤..`"),
                ("$stats", "`–ü–æ–∫–∞–∑–∞—Ç—å —Å–∫—Ä—ã—Ç—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤.`"),
                ("$date_stats", "`–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –∑–∞ –¥–∞—Ç—É.`"),
                ("$set", "`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –¥–ª—è staff_member.`"),
                ("$sum", "`–ü—Ä–∏–±–∞–≤–∏—Ç—å/—É–±–∞–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –¥–ª—è staff_member.`"),
                ("$rate_clear", "`–û—á–∏—Å—Ç–∏—Ç—å –æ—Ü–µ–Ω–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É/–≤—Å–µ–º.`"),
                ("$edit_rate", "`–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∞–π–∫–æ–≤/–¥–∏–∑–ª–∞–π–∫–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É.`"),
                ("$date_set_stats", "`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –∑–∞ –¥–∞—Ç—É.`"),
                ("$config_clear", "`–û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ –æ—Ç –ª–∏—à–Ω–µ–≥–æ –º—É—Å–æ—Ä–∞ (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –∫–æ–≥–¥–∞ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–µ—Ç—É) [danger].`"),
                ("$config_date_clear", "`–û—á–∏—Å—Ç–∏—Ç—å –¥–∞—Ç—ã –≤ date_stats –∫–æ–Ω—Ñ–∏–≥–µ. [danger] `"),
                ("$claimedticket_clear", "`–û—á–∏—Å—Ç–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥–µ claimed_tickets [danger]`"),
                ("$oldupdate_clear", "`–ù–µ –ø–æ–º–Ω—é –Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤—ã 2.2 –ø—Ä–æ–ø–∏—Å–∞—Ç—å [danger]`"),
                ("$tickets_num", "`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤.`"),
                ("$primetime", "`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.`"),
                ("$price_set", "`–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ü–µ–Ω –¥–æ–∫—É–ø–∫–∏/–∑–∞–º–æ—Ä–æ–∑–∫–∏/–ø–µ—Ä–µ–Ω–æ—Å (–¥–ª—è —Å—Ç. –∞–¥–º–∏–Ω–æ–≤)`")
            ]
            if role_type == "staff":
                commands = staff_commands
                if message.author.name.lower() not in self.config.get('staff_members', {}):
                    await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è staff_members!")
                    return
            elif role_type == "dev":
                commands = dev_commands
                if message.author.name.lower() not in self.config.get('dev_members', {}):
                    await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è dev_members!")
                    return
            else:
                await message.channel.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ 'staff' –∏–ª–∏ 'dev' –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã $help.")
                return
            for command, description in commands:
                embed.add_field(name=command, value=description, inline=False)
            await message.author.send(embed=embed)
            await message.channel.send("–û—Ç–ø—Ä–∞–≤–∏–ª —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        
        if message.content.startswith('$ticketban'):
            await message.delete()
            if message.author.name.lower() in bot.staff_members:
                args = message.content.split()
                if len(args) == 3:
                    username = args[1].lower()
                    duration = args[2].lower()
                    if duration.endswith('d'):
                        duration_in_seconds = int(duration[:-1]) * 86400
                    elif duration.endswith('h'):
                        duration_in_seconds = int(duration[:-1]) * 3600
                    else:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'd' –¥–ª—è –¥–Ω–µ–π –∏–ª–∏ 'h' –¥–ª—è —á–∞—Å–æ–≤.")
                        return
                    with open('created_tickets.json', 'r+') as f:
                        try:
                            created_tickets = json.load(f)
                        except json.JSONDecodeError:
                            created_tickets = {}
                        if username not in created_tickets:
                            created_tickets[username] = {'banned_until': datetime.datetime.now().timestamp() + duration_in_seconds, 'banned_by': message.author.name}
                        else:
                            created_tickets[username]['banned_until'] = datetime.datetime.now().timestamp() + duration_in_seconds
                            created_tickets[username]['banned_by'] = message.author.name
                        f.seek(0)
                        json.dump(created_tickets, f)
                        f.truncate()
                        await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –∑–∞–±–∞–Ω–µ–Ω –≤ —Ç–∏–∫–µ—Ç–∞—Ö –Ω–∞ {duration}")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$ticketban <username> <duration>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$ticketunban'):
            await message.delete()
            if message.author.name.lower() in bot.staff_members:
                args = message.content.split()
                if len(args) == 2:
                    username = args[1].lower()
                    with open('created_tickets.json', 'r+') as f:
                        try:
                            created_tickets = json.load(f)
                        except json.JSONDecodeError:
                            created_tickets = {}
                        if username in created_tickets:
                            del created_tickets[username]
                            f.seek(0)
                            json.dump(created_tickets, f)
                            f.truncate()
                            await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —Ä–∞–∑–±–∞–Ω–µ–Ω –≤ —Ç–∏–∫–µ—Ç–∞—Ö.")
                        else:
                            await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤.")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$ticketunban <username>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        if message.content.startswith('$alert'):
            await message.delete()
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                args = message.content.split()
                if len(args) == 2:
                    staff_member = message.author.name.lower()
                    if args[1].lower() == 'on':
                        if 'alert_settings' not in bot.config:
                            bot.config['alert_settings'] = {}
                        bot.config['alert_settings'][staff_member] = True
                        with open('config.json', 'w') as f:
                            json.dump(bot.config, f)
                        await message.channel.send(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è {staff_member}")
                    elif args[1].lower() == 'off':
                        if 'alert_settings' not in bot.config:
                            bot.config['alert_settings'] = {}
                        bot.config['alert_settings'][staff_member] = False
                        with open('config.json', 'w') as f:
                            json.dump(bot.config, f)
                        await message.channel.send(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã –¥–ª—è {staff_member}")
                    else:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$alert on` –∏–ª–∏ `$alert off`")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$alert on` –∏–ª–∏ `$alert off`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤!")
        
        if message.content.startswith('$price_set'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) > 1:
                    service_type = args[1].lower()
                    if service_type == 'vip':
                        if len(args) == 6:
                            medium_price = args[2]
                            platinum_price = args[3]
                            crystal_price = args[4]
                            crystal_plus_price = args[5]
                            if 'prices' not in bot.config:
                                bot.config['prices'] = {}
                            bot.config['prices']['vip'] = {
                                'medium': medium_price,
                                'platinum': platinum_price,
                                'crystal': crystal_price,
                                'crystal+': crystal_plus_price
                            }
                            with open(bot.config_file, 'w') as f:
                                json.dump(bot.config, f, indent=4)
                            await message.channel.send("–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è VIP.")
                        else:
                            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$price_set vip <medium_price> <platinum_price> <crystal_price> <crystal_plus_price>`")
                    elif service_type == 'admin':
                        if len(args) == 5:
                            admin_1lvl_price = args[2]
                            admin_2lvl_price = args[3]
                            sponsor_price = args[4]
                            if 'prices' not in bot.config:
                                bot.config['prices'] = {}
                            bot.config['prices']['admin'] = {
                                '1lvl': admin_1lvl_price,
                                '2lvl': admin_2lvl_price,
                                'sponsor': sponsor_price
                            }
                            with open(bot.config_file, 'w') as f:
                                json.dump(bot.config, f, indent=4)
                            await message.channel.send("–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è ADMIN.")
                        else:
                            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$price_set admin <admin_1lvl_price> <admin_2lvl_price> <sponsor_price>`")
                    elif service_type == 'services':
                        if len(args) == 8:  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–æ 8
                            transfer_price = args[2]
                            unfreeze_admin_1_price = args[3]
                            unfreeze_admin_2lvl_price = args[4]
                            unfreeze_sponsor_price = args[5]
                            unmute_site_price = args[6]  # –ù–æ–≤–∞—è —É—Å–ª—É–≥–∞: —Ä–∞–∑–º—É—Ç –≤ —á–∞—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ
                            unban_ds_price = args[7]     # –ù–æ–≤–∞—è —É—Å–ª—É–≥–∞: —Ä–∞–∑–±–∞–Ω –≤ –¥–∏—Å–∫–æ—Ä–¥–µ
                            if 'prices' not in bot.config:
                                bot.config['prices'] = {}
                            bot.config['prices']['services'] = {
                                'transfer': transfer_price,
                                'unfreeze_admin_1': unfreeze_admin_1_price,
                                'unfreeze_admin_2lvl': unfreeze_admin_2lvl_price,
                                'unfreeze_sponsor': unfreeze_sponsor_price,
                                'unmute_site': unmute_site_price,  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —É—Å–ª—É–≥—É
                                'unban_ds': unban_ds_price         # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —É—Å–ª—É–≥—É
                            }
                            with open(bot.config_file, 'w') as f:
                                json.dump(bot.config, f, indent=4)
                            await message.channel.send("–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è SERVICES.")
                        else:
                            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$price_set services <transfer_price> <unfreeze_admin_1_price> <unfreeze_admin_2lvl_price> <unfreeze_sponsor_price> <unmute_site_price> <unban_ds_price>`")
                    else:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø —É—Å–ª—É–≥–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `vip`, `admin` –∏–ª–∏ `services`.")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$price_set <service_type> <prices>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        elif message.content.startswith('$price'):
            await message.delete()
            embed = disnake.Embed(
                title="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±—ã—Å—Ç—Ä—ã—Ö —Ü–µ–Ω",
                description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ü–µ–Ω—ã.",
                color=disnake.Color.from_rgb(119, 137, 253)
            )
            view = disnake.ui.View()
            vip_button = disnake.ui.Button(label='–í–ò–ü', style=disnake.ButtonStyle.blurple, emoji='üíé', custom_id='vip_service')
            admin_button = disnake.ui.Button(label='–ê–î–ú', style=disnake.ButtonStyle.blurple, emoji='üëÆ', custom_id='admin_service')
            services_button = disnake.ui.Button(label='–°–ï–†–í–ò–°–´', style=disnake.ButtonStyle.blurple, emoji='üõ†Ô∏è', custom_id='services')
            view.add_item(vip_button)
            view.add_item(admin_button)
            view.add_item(services_button)
            await message.channel.send(embed=embed, view=view)
        if message.content.startswith('$claim'):
            await message.delete()
            if "ticket" in message.channel.name.lower() and message.author.name.lower() in self.config.get('staff_members', {}): # type: ignore
                await self.claim_ticket(message)
            elif "ticket" not in message.channel.name.lower(): # type: ignore
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å–ª–æ–≤–æ 'ticket'!")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è staff_members!")

        elif message.content.startswith('$close'):
            await message.delete()
            if "ticket" in message.channel.name.lower() and message.author.name.lower() in self.config.get('staff_members', {}): # type: ignore
                await self.close_ticket(message)
            elif "ticket" not in message.channel.name.lower(): # type: ignore
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å–ª–æ–≤–æ 'ticket'!")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è staff_members!")
    
        if message.content.startswith('$add_rights'): 
            await message.delete() 
            if message.author.name.lower() in bot.dev_members: 
                args = message.content.split() 
                if len(args) == 4:
                    nickname = args[1] 
                    role = args[2] 
                    user_id = args[3]
                    if role.lower() == 'staff': 
                        bot.config['staff_members'][nickname] = {'name': nickname, 'id': int(user_id), 'claimed_tickets': [], 'closed_tickets': 0}
                    elif role.lower() == 'dev': 
                        bot.config['dev_members'].append(nickname) 
                    else: 
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å. –ü–∏—à–∏—Ç–µ 'staff' –∏–ª–∏ 'dev'.") 
                    with open(bot.config_file, 'w') as f: 
                        json.dump(bot.config, f, indent=4) 
                    await message.channel.send(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ —É `{nickname}` —Ä–æ–ª—å: `{role}`") 
                else: 
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$add_rights <nickname> <role> <user_id>`") 
            else: 
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!") 
        
        if message.content.startswith('$del_rights'):
            await message.delete()
            if message.author.name.lower() in self.dev_members:
                args = message.content.split()
                if len(args) == 3:
                    username = args[1]
                    role = args[2]
                    if role.lower() == 'staff':
                        if username in self.config['staff_members']:
                            del self.config['staff_members'][username]
                        else:
                            await message.channel.send(f"{username} –Ω–µ—Ç—É –≤ staff_member —Å–ø–∏—Å–∫–µ.")
                    elif role.lower() == 'dev':
                        if username in self.dev_members:
                            self.dev_members.remove(username)
                        else:
                            await message.channel.send(f"{username} –Ω–µ—Ç—É –≤ dev_members —Å–ø–∏—Å–∫–µ.")
                    else:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å. –ü–∏—à–∏—Ç–µ 'staff' –∏–ª–∏ 'dev'.")
                    with open(self.config_file, 'w') as f:
                        json.dump(self.config, f, indent=4)
                    await message.channel.send(f"–£–±—Ä–∞–Ω–∞ —É `{username}` —Ä–æ–ª—å `{role}`")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ $del_rights <username> <role>")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        if message.content.startswith('$edit_rights'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) >= 2:
                    nickname = args[1].lower()
                    if nickname in bot.config['staff_members']:
                        if len(args) == 2:
                            user_data = bot.config['staff_members'][nickname]
                            await message.channel.send(f"–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è `{nickname}`:")
                            for key, value in user_data.items():
                                if key not in ["claimed_tickets", "claimed_ticket_users", "closed_tickets"]:
                                    await message.channel.send(f"{key}: {value}")
                        elif len(args) >= 3:
                            action = args[2].lower()
                            if action == 'edit':
                                if len(args) == 4:
                                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$edit_rights <nickname> edit <key> <value>`.")
                                elif len(args) == 5:
                                    key = args[3].lower()
                                    value = args[4]
                                    if key in bot.config['staff_members'][nickname]:
                                        bot.config['staff_members'][nickname][key] = value
                                        await message.channel.send(f"–ó–Ω–∞—á–µ–Ω–∏–µ `{key}` –¥–ª—è `{nickname}` –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ `{value}`.")
                                    else:
                                        await message.channel.send(f"–ö–ª—é—á `{key}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è `{nickname}`.")
                            elif action == 'add':
                                if len(args) == 4:
                                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$edit_rights <nickname> add <key> <value>`.")
                                elif len(args) == 5:
                                    key = args[3].lower()
                                    value = args[4]
                                    if key not in bot.config['staff_members'][nickname]:
                                        bot.config['staff_members'][nickname][key] = value
                                        await message.channel.send(f"–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ `{key}` –¥–ª—è `{nickname}` –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º `{value}`.")
                                    else:
                                        await message.channel.send(f"–ö–ª—é—á `{key}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è `{nickname}`.")
                            else:
                                await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `edit` –∏–ª–∏ `add`.")
                        else:
                            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$edit_rights <nickname> <action> <key> <value>`.")
                    else:
                        await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{nickname}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ staff.")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$edit_rights <nickname> <action> <key> <value>`.")

                with open(bot.config_file, 'w') as f:
                    json.dump(bot.config, f, indent=4)
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
                if message.content.startswith('$add_staff_role'):
                    await message.delete()
                    if message.author.name.lower() in bot.dev_members:
                        args = message.content.split()
                        if len(args) == 2:
                            role_id = args[1]
                            try:
                                role_id = int(role_id)
                                bot.config['staff_roles'].append(role_id)
                                with open(bot.config_file, 'w') as f:
                                    json.dump(bot.config, f, indent=4, )
                                await message.channel.send(f"–†–æ–ª—å –∞–π–¥–∏: `{role_id}` –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ staff_roles.")
                            except ValueError:
                                await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∞–π–¥–∏ —Ä–æ–ª–∏. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏.")
                        else:
                            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$add_staff_role <role_id>`")
                    else:
                        await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")

        if message.content.startswith('$del_staff_role'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) == 2:
                    role_id = args[1]
                    try:
                        role_id = int(role_id)
                        if role_id in bot.config['staff_roles']:
                            bot.config['staff_roles'].remove(role_id)
                            with open(bot.config_file, 'w') as f:
                                json.dump(bot.config, f, indent=4, )
                            await message.channel.send(f"–†–æ–ª—å –∞–π–¥–∏: `{role_id}` –±—ã–ª–∞ —É–±—Ä–∞–Ω–∞ –∏–∑ staff_roles")
                        else:
                            await message.channel.send(f"–†–æ–ª—å –∞–π–¥–∏: `{role_id}` –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ staff_roles")
                    except ValueError:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∞–π–¥–∏ —Ä–æ–ª–∏. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏.")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$del_staff_role <role_id>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$info'):
            await message.delete()
            author_name = message.author.name.lower()
            staff_members = bot.config.get('staff_members', {})
            if author_name in staff_members:
                sorted_staff_members = sorted(staff_members.items(), key=lambda x: x[1].get('closed_tickets', 0), reverse=True)
                embed = disnake.Embed(
                    title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ç–∞",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                embed.add_field(name="–í–µ—Ä—Å–∏—è –Æ–¢–∏–∫–∞", value=version, inline=False)
                embed.add_field(name="–í—Å–µ–≥–æ —Ç–∏–∫–µ—Ç–æ–≤", value=f"{bot.ticket_counter}", inline=False)
                embed.add_field(name="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", value=f"{bot.config.get('primetime', {}).get('start', 'Unknown')} - {bot.config.get('primetime', {}).get('end', 'Unknown')}", inline=False)
                embed.add_field(name="–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤", value=f"{len([channel for channel in bot.get_all_channels() if 'ticket' in channel.name.lower()])}", inline=False)
                embed.set_footer(
                    text="maded by anarchowitz ",
                    icon_url="https://downloader.disk.yandex.com/preview/e7bec6580696944ad49039332e71c023ac8d13baf9841d96653d7fdc759cd75e/6705e21f/1PtBsEqXKP1JKP6WCfZ_saYALCuLK5fhR2ZTiKfroCRvtqZHpiv1yjtsIUsGHYgYvMhuTlGwx0NcYtEOYN_WVA%3D%3D?uid=0&filename=fc4cd000b95dfcb37a5467ff6f15638b.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=2048x2048",
                )
                await message.channel.send(embed=embed)
            else:
                await message.channel.send(f"–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è staff_members!")

        if message.content.startswith('$list_rights'):
            await message.delete()
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                staff_members = bot.config.get('staff_members', {})
                dev_members = bot.config.get('dev_members', [])
                embed = disnake.Embed(
                    title="–°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                embed.add_field(name="Staff Members", value='\n'.join(staff_members.keys()), inline=False)
                embed.add_field(name="Dev Members", value='\n'.join(dev_members), inline=False)
                await message.channel.send(embed=embed)
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è staff_members!")

        if message.content.startswith('$list_helper'):
            await message.delete()
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                staff_members = bot.config.get('staff_members', {})
                dev_members = bot.config.get('dev_members', [])
                embed = disnake.Embed(
                    title="–°–ø–∏—Å–æ–∫ –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                embed.add_field(
                    name="`.–∞–¥–º–∏–Ω—á–∞—Ç`",
                    value="–§–æ—Ä–º–∞ –æ –∫—Ä–∞—Ç–∫–æ–º –≥–∞–π–¥–µ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—á–∞—Ç –∫—Å2",
                    inline=False
                )
                embed.add_field(
                    name="`.—Å—Å—ã–ª–∫–∞—Å–∞–π—Ç`",
                    value="–§–æ—Ä–º–∞ –æ –∫—Ä–∞—Ç–∫–æ–º –≥–∞–π–¥–µ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Å–∞–π—Ç–∞",
                    inline=False
                )
                embed.add_field(
                    name="`.–æ–±–Ω–æ–≤–∞`",
                    value="–§–æ—Ä–º–∞ –æ —Ç–æ–º, —á—Ç–æ –≤—ã—à–ª–∞ –æ–±–Ω–æ–≤–∞ –≤ –∫—Å –∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã",
                    inline=False
                )
                embed.add_field(
                    name="`.–∂–∞–ª–æ–±–∞`",
                    value="–§–æ—Ä–º–∞ –æ —Ç–æ–º, —á—Ç–æ –∂–∞–ª–æ–±–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –∞–¥–º–∏–Ω —á–∞—Ç",
                    inline=False
                )
                embed.add_field(
                    name="`.–±–∞–≥`",
                    value="–§–æ—Ä–º–∞ –æ —Ç–æ–º, —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–≥–µ - –ø–µ—Ä–µ–¥–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É",
                    inline=False
                )
                embed.add_field(
                    name="`.—Å–∫–∏–Ω—Ä–µ–π–≤`",
                    value="–§–æ—Ä–º–∞ –≤—ã–¥–∞—á–∏ —Ç–æ–∫–µ–Ω–æ–≤ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ —Å–∫–∏–Ω—Ä–µ–π–≤–µ",
                    inline=False
                )
                embed.add_field(
                    name="`.–∫–æ–∏–Ω—ã`",
                    value="–§–æ—Ä–º–∞ –æ —Ç–æ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å –∫–æ–∏–Ω–∞–º–∏",
                    inline=False
                )
                embed.add_field(
                    name="`.—Å–æ—Ü—Å–µ—Ç–∏`",
                    value="–§–æ—Ä–º–∞ –æ –Ω–∞—à–∏—Ö —Å–æ—Ü—Å–µ—Ç—è—Ö",
                    inline=False
                )
                embed.add_field(
                    name="`.–ø—Ä–æ–º–æ–≤–≤–æ–¥`",
                    value="–§–æ—Ä–º–∞ –æ —Ç–æ–º, –∫–∞–∫ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥.",
                    inline=False
                )
                embed.add_field(
                    name="`.–±–ª–µ–∫–¥–∂–µ–∫`",
                    value="–§–æ—Ä–º–∞ –æ —Ç–æ–º, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å –≤ –±–ª–µ–∫–¥–∂–µ–∫.",
                    inline=False
                )
                await message.channel.send(embed=embed)
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è staff_members!")   
            
        
        if message.content.startswith('$date_set_stats'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) == 4:
                    date_str = args[1]
                    staff_member = args[2].lower()
                    closed_tickets = int(args[3])
                    if date_str == 'all' and staff_member == 'all':
                        for date_key in bot.config.get('date_stats', {}).keys():
                            bot.config['date_stats'][date_key] = {k: closed_tickets for k in bot.config['staff_members']}
                    elif date_str == 'all':
                        for date_key in bot.config.get('date_stats', {}).keys():
                            if staff_member in bot.config['staff_members']:
                                bot.config['date_stats'][date_key][staff_member] = closed_tickets
                    elif staff_member == 'all':
                        if date_str in bot.config.get('date_stats', {}):
                            bot.config['date_stats'][date_str] = {k: closed_tickets for k in bot.config['staff_members']}
                        else:
                            bot.config['date_stats'][date_str] = {k: closed_tickets for k in bot.config['staff_members']}
                    else:
                        date_obj = datetime.datetime.strptime(date_str, '%d.%m.%Y').date()
                        date_str = date_obj.isoformat()
                        if date_str in bot.config.get('date_stats', {}):
                            bot.config['date_stats'][date_str][staff_member] = closed_tickets
                        else:
                            bot.config['date_stats'][date_str] = {staff_member: closed_tickets}
                    with open(bot.config_file, 'w') as f:
                        json.dump(bot.config, f, indent=4)
                    await message.channel.send(f"–î–ª—è `{staff_member}` –≤ –¥–∞—Ç—É: `{date_str}` –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ {closed_tickets}.")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$date_set_stats <date/all> <staff_member/all> <closed_tickets>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$date_stats'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) == 2:
                    date_str = args[1]
                    try:
                        date_obj = datetime.datetime.strptime(date_str, '%d.%m.%Y').date()
                        date_str = date_obj.isoformat()
                        if date_str in bot.config.get('date_stats', {}):
                            date_stats = bot.config['date_stats'][date_str]
                            sorted_date_stats = sorted(date_stats.items(), key=lambda x: x[1], reverse=True)
                            embed = disnake.Embed(
                                title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –∑–∞ `{date_str}`",
                                color=disnake.Color.from_rgb(119, 137, 253)
                            )
                            for staff_member, closed_tickets in sorted_date_stats:
                                embed.add_field(name=f"`{staff_member}`", value=f"–ó–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤: {closed_tickets}", inline=False)
                            await message.channel.send(embed=embed)
                        else:
                            await message.channel.send(f"–ù–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –¥–∞—Ç—ã `{date_str}`")
                    except ValueError:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ DD.MM.YYYY")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$date_stats <date>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        elif message.content.startswith('$rate_top'):
            await message.delete()
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                args = message.content.split()
                staff_members = bot.config.get('staff_members', {})
                if len(args) > 1:
                    target_member = args[1].lower()
                    if target_member in staff_members:
                        target_stats = staff_members[target_member]
                        target_closed_tickets = target_stats.get('closed_tickets', 0)
                        target_likes = target_stats.get('likes', 0)
                        target_dislikes = target_stats.get('dislikes', 0)
                        target_score = target_likes - target_dislikes
                        embed = disnake.Embed(
                            title=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è `{target_member}`",
                            color=disnake.Color.from_rgb(119, 137, 253)
                        )
                        embed.add_field(name="–ó–∞–∫—Ä—ã—Ç—ã–µ —Ç–∏–∫–µ—Ç—ã", value=f"{target_closed_tickets}", inline=False)
                        embed.add_field(name="–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥", value=f"{target_score}", inline=False)
                        embed.add_field(name="–õ–∞–π–∫–∏", value=f"{target_likes}", inline=False)
                        embed.add_field(name="–î–∏–∑–ª–∞–π–∫–∏", value=f"{target_dislikes}", inline=False)
                        await message.channel.send(embed=embed)
                    else:
                        await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{target_member}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.")
                else:
                    staff_scores = {}
                    for staff_member, stats in staff_members.items():
                        closed_tickets = stats.get('closed_tickets', 0)
                        likes = stats.get('likes', 0)
                        dislikes = stats.get('dislikes', 0)
                        score = likes - dislikes
                        staff_scores[staff_member] = score
                    sorted_staff_members = sorted(staff_scores.items(), key=lambda x: x[1], reverse=True)
                    embed = disnake.Embed(
                        title="–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                        color=disnake.Color.from_rgb(119, 137, 253)
                    )
                    for i, (staff_member, score) in enumerate(sorted_staff_members):
                        embed.add_field(name=f"{i + 1}. `{staff_member}`", value=f"–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {score}", inline=False)
                    await message.channel.send(embed=embed)
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")

        if message.content.startswith('$secret_stats'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) > 1:
                    target_member = args[1]
                    staff_members = bot.config.get('staff_members', {})
                    if target_member in staff_members:
                        stats = staff_members[target_member]
                        closed_tickets = stats.get('closed_tickets', 0)
                        likes = stats.get('likes', 0)
                        dislikes = stats.get('dislikes', 0)
                        target_score = likes - dislikes
                        embed = disnake.Embed(
                            title=f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è `{target_member}`**",
                            color=disnake.Color.from_rgb(119, 137, 253)
                        )
                        embed.add_field(name="–ó–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤", value=closed_tickets, inline=False)
                        embed.add_field(name="–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥", value=target_score, inline=False)
                        embed.add_field(name="–õ–∞–π–∫–∏", value=likes, inline=False)
                        embed.add_field(name="–î–∏–∑–ª–∞–π–∫–∏", value=dislikes, inline=False)
                        await message.channel.send(embed=embed)
                    else:
                        await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{target_member}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.")
                else:
                    staff_members = bot.config.get('staff_members', {})
                    sorted_staff_members = sorted(staff_members.items(), key=lambda x: x[1].get('closed_tickets', 0), reverse=True)
                    embed = disnake.Embed(
                        title="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤",
                        color=disnake.Color.from_rgb(119, 137, 253)
                    )
                    for i, (staff_member, stats) in enumerate(sorted_staff_members):
                        closed_tickets = stats.get('closed_tickets', 0)
                        likes = stats.get('likes', 0)
                        dislikes = stats.get('dislikes', 0)
                        score = likes - dislikes
                        embed.add_field(name=f"**–¢–æ–ø {i+1}**: `{staff_member}`", value=f"–ó–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤: {closed_tickets}\n–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {score}\n–õ–∞–π–∫–∏: {likes}\n–î–∏–∑–ª–∞–π–∫–∏: {dislikes}", inline=False)
                    await message.channel.send(embed=embed)
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$stats'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                staff_members = bot.config.get('staff_members', {})
                sorted_staff_members = sorted(staff_members.items(), key=lambda x: x[1].get('closed_tickets', 0), reverse=True)
                embed = disnake.Embed(
                    title="–û–±—â–∞—è —Å–∫—Ä—ã—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                for i, (staff_member, stats) in enumerate(sorted_staff_members):
                    closed_tickets = stats.get('closed_tickets', 0)
                    likes = stats.get('likes', 0)
                    dislikes = stats.get('dislikes', 0)
                    score = likes - dislikes
                    embed.add_field(name=f"**–¢–æ–ø {i+1}**: `{staff_member}`", value=f"–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {score}\n–õ–∞–π–∫–∏: {likes}\n–î–∏–∑–ª–∞–π–∫–∏: {dislikes}", inline=False)
                await message.channel.send(embed=embed)
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$primetime'):
            await message.delete()
            if message.author.name.lower() in self.dev_members:
                args = message.content.split()
                if len(args) == 3:
                    start_time = args[1]
                    end_time = args[2]
                    self.config['primetime'] = {'start': start_time, 'end': end_time}
                    with open(self.config_file, 'w') as f:
                        json.dump(self.config, f, indent=4)
                    await message.channel.send(f"–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: `{start_time}` - `{end_time}`")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ $primetime `<start_time>` `<end_time>`\n (e.g $primetime 10:00 20:00)")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")

        if message.content.startswith('$tickets_num'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) == 2:
                    try:
                        ticket_counter = int(args[1])
                        bot.config['ticket_counter'] = ticket_counter
                        with open(bot.config_file, 'w') as f:
                            json.dump(bot.config, f)
                        await message.channel.send(f"–ó–Ω–∞—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ –≤ –∑–Ω–∞—á–µ–Ω–∏–µ: `{ticket_counter}`.")
                    except ValueError:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. (no int)")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$tickets_num <ticket_counter>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$set'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) == 3:
                    staff_member = args[1]
                    try:
                        closed_tickets = int(args[2])
                        staff_members = bot.config.get('staff_members', {})
                        if staff_member.lower() == 'all':
                            for member in staff_members:
                                staff_members[member]['closed_tickets'] = closed_tickets
                        elif staff_member.lower() in [member.lower() for member in staff_members]:
                            staff_members[staff_member.lower()]['closed_tickets'] = closed_tickets
                            bot.config['staff_members'] = staff_members
                            with open(bot.config_file, 'w') as f:
                                json.dump(bot.config, f)
                            await message.channel.send(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ –¥–ª—è `{staff_member}` –≤ –∑–Ω–∞—á–µ–Ω–∏–µ `{closed_tickets}`")
                        else:
                            await message.channel.send(f"{staff_member} –Ω–µ –∏–∑ —Å–ø–∏—Å–∫–∞ staff_member")
                    except ValueError:
                        await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. (no int)")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$set <staff_member> <closed_tickets>` –∏–ª–∏ `$set all <closed_tickets>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$sum'):
            await message.delete()
            if message.author.name.lower() in self.dev_members:
                args = message.content.split()
                if len(args) == 3:
                    staff_member = args[1].lower()
                    operation = args[2]
                    staff_members = self.config.get('staff_members', {})
                    if staff_member in staff_members:
                        try:
                            value = int(operation)
                            staff_members[staff_member]['closed_tickets'] += value
                            self.config['staff_members'] = staff_members
                            with open(self.config_file, 'w') as f:
                                json.dump(self.config, f, indent=4)
                            await message.channel.send(f"–£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è `{staff_member}` –Ω–∞ `{operation}`")
                        except ValueError:
                            await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **—Ü–µ–ª–æ–µ** —á–∏—Å–ª–æ")
                    else:
                        await message.channel.send(f"`{staff_member}` –Ω–µ –∏–∑ —Å–ø–∏—Å–∫–∞ staff_member")
                else:
                    await message.channel.send("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `$sum <staff_member> <+—á–∏—Å–ª–æ/-—á–∏—Å–ª–æ>`")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")

        if message.content.startswith('$config_clear'):
            await message.delete()
            if message.author.name.lower() in bot.dev_members:
                args = message.content.split()
                if len(args) > 1:
                    user = args[1].lower()
                    if user == 'all':
                        await message.channel.send(bot.config_clear())
                    else:
                        await message.channel.send(bot.config_clear(user))
                else:
                    await message.channel.send("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ `all`, —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å `claimed_tickets | claimed_ticket_users` –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$clear_tickets'):
            await message.delete()
            if message.author.name.lower() in self.staff_members:
                args = message.content.split()
                if len(args) > 1:
                    user = args[1].lower()
                    if user == 'all':
                        with open('created_tickets.json', 'w') as f:
                            json.dump({}, f)
                        await message.channel.send("–§–∞–π–ª `created_tickets.json` –æ—á–∏—â–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é.")
                    else:
                        with open('created_tickets.json', 'r+') as f:
                            try:
                                created_tickets = json.load(f)
                            except json.JSONDecodeError:
                                created_tickets = {}
                            if user in created_tickets:
                                del created_tickets[user]
                                f.seek(0)
                                json.dump(created_tickets, f)
                                f.truncate()
                                await message.channel.send(f"–ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{user}` —É–¥–∞–ª–µ–Ω–∞ –∏–∑ `created_tickets.json`.")
                            else:
                                await message.channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{user}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ `created_tickets.json`.")
                else:
                    await message.channel.send("–£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ `all`, —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å `created_tickets.json`.")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$rate_check'):
            await message.delete()
            args = message.content.split()
            if len(args) == 1:
                user_name = message.author.name.lower()
            else:
                user_name = args[1].lower()
            staff_members = bot.config.get('staff_members', {})
            if user_name in staff_members:
                likes = staff_members[user_name].get('likes', 0)
                dislikes = staff_members[user_name].get('dislikes', 0)
                rating = likes - dislikes
                embed = disnake.Embed(
                    title=f"–†–µ–π—Ç–∏–Ω–≥ {user_name}",
                    description=f"üëç –õ–∞–π–∫–∏: {likes}\nüëé –î–∏–∑–ª–∞–π–∫–∏: {dislikes}\n\nüìä –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {rating}",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                await message.channel.send(embed=embed)
            else:
                await message.channel.send(f"–£ {user_name} –Ω–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º.")
        if message.content.startswith('$rate_clear'):
            await message.delete()
            if message.author.name.lower() in self.config.get('dev_members', []):
                staff_members = self.config.get('staff_members', {})
                for staff_member in staff_members:
                    staff_members[staff_member]['likes'] = 0
                    staff_members[staff_member]['dislikes'] = 0
                self.config['staff_members'] = staff_members
                with open(self.config_file, 'w') as f:
                    json.dump(self.config, f, indent=4)
                await message.channel.send("–û—Ü–µ–Ω–∫–∏ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –±—ã–ª–∏ –æ—á–∏—â–µ–Ω—ã.")
            else:
                await message.channel.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        if message.content.startswith('$edit_rate'):
            await message.delete()
            user_name = message.author.name.lower()
            if message.author.name.lower() in self.config.get('dev_members', []):
                parts = message.content.split()
                if len(parts) != 4:
                    await message.channel.send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $edit_rate +(—á–∏—Å–ª–æ) like (–Ω–∏–∫) –∏–ª–∏ $edit_rate -(—á–∏—Å–ª–æ) dislike (–Ω–∏–∫).")
                    return
                change_value = parts[1]
                rate_type = parts[2].lower()
                target_user_name = parts[3].lower()
                if target_user_name not in staff_members:
                    await message.channel.send("–¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                likes = staff_members[target_user_name].get('likes', 0)
                dislikes = staff_members[target_user_name].get('dislikes', 0)
                if rate_type == 'like':
                    if change_value.startswith('+'):
                        likes += int(change_value[1:])
                    elif change_value.startswith('-'):
                        likes -= int(change_value[1:])
                elif rate_type == 'dislike':
                    if change_value.startswith('+'):
                        dislikes += int(change_value[1:])
                    elif change_value.startswith('-'):
                        dislikes -= int(change_value[1:])
                else:
                    await message.channel.send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ä–µ–π—Ç–∏–Ω–≥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'like' –∏–ª–∏ 'dislike'.")
                    return
                staff_members[target_user_name]['likes'] = likes
                staff_members[target_user_name]['dislikes'] = dislikes
                rating = likes - dislikes
                embed = disnake.Embed(
                    title=f"–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_name}",
                    description=f"üëç –õ–∞–π–∫–∏: {likes}\nüëé –î–∏–∑–ª–∞–π–∫–∏: {dislikes}\n\nüìä –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {rating}",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                await message.channel.send(embed=embed)
            else:
                await message.channel.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞.")
        
        if message.content.startswith('$config_date_clear'):
            await message.delete()
            if message.author.name.lower() in self.dev_members:
                self.config['date_stats'] = {}
                with open(self.config_file, 'w') as f:
                    json.dump(self.config, f, indent=4)
                await message.channel.send("–î–∞—Ç—ã –≤ date_stats –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")

        if message.content.startswith('$claimedticket_clear'):
            if message.author.name.lower() in self.config.get('dev_members', []):
                self.config['claimed_tickets'] = {}
                with open(self.config_file, 'w') as f:
                    json.dump(self.config, f, indent=4)
                await message.channel.send("–î–∞–Ω–Ω—ã–µ –æ claimed_tickets –±—ã–ª–∏ –æ—á–∏—â–µ–Ω—ã.")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
        
        if message.content.startswith('$oldupdate_clear'):
            if message.author.name.lower() in self.config.get('dev_members', []):
                if 'ratings' in self.config:
                    del self.config['ratings']
                if 'average_ratings' in self.config:
                    del self.config['average_ratings']
                if 'user_ratings' in self.config:
                    del self.config['user_ratings']
                if 'qa_enabled' in self.config:
                    del self.config['qa_enabled']
                with open(self.config_file, 'w') as f:
                    json.dump(self.config, f, indent=4)
                if 'staff_members' not in self.config:
                    self.config['staff_members'] = []

                staff_members_dict = {}
                for member in self.config['staff_members']:
                    if isinstance(member, str):
                        staff_members_dict[member] = {'id': None, 'name': member, 'claimed_tickets': [], 'closed_tickets': 0}
                    elif isinstance(member, dict):
                        staff_members_dict[member['name']] = member

                self.config['staff_members'] = staff_members_dict
                with open(self.config_file, 'w') as f:
                    json.dump(self.config, f, indent=4)

                await message.channel.send("—Å—Ç–∞—Ä–∞—è —Ö—É–π–Ω—è –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∂–æ—Å–∫ <2.3 upd")
            else:
                await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!")
#—Ñ–∞—Å—Ç –∞–Ω—Å–≤–µ—Ä—Å –±–∏–Ω–¥—Å
        if message.content.startswith('.—Å–∫–∏–Ω—Ä–µ–π–≤'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f"–ß—Ç–æ –±—ã –º—ã –≤–∞–º –ø–æ–º–æ–≥–ª–∏, —É—Ç–æ—á–Ω–∏—Ç–µ.\n1) –ö–∞–∫ –¥–∞–≤–Ω–æ –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ SkinRave?\n2) –ê–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å –ª–∏ –≤—ã –ø–æ–¥ —Å–≤–æ–∏–º Steam –∞–∫–∫–∞—É–Ω—Ç–æ–º?\n3) –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ —Å–∞–π—Ç–µ (yooma.su)\n4) –°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ SkinRave. \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}")
            else:
                pass
        if message.content.startswith('.–∞–¥–º–∏–Ω—á–∞—Ç'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f'–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç.\n1) –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–º–∞–Ω–¥–Ω—ã–π —á–∞—Ç –≤ –∏–≥—Ä–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–ª–∞–≤–∏—à–∞ "U").\n2) –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∏–º–≤–æ–ª–∞ @\n–ù–∞–ø—Ä–∏–º–µ—Ä: @–ü—Ä–∏–≤–µ—Ç \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}')
            else:
                pass
        if message.content.startswith('.—Å—Å—ã–ª–∫–∞—Å–∞–π—Ç'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f'–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ —Å–∞–π—Ç–µ, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n1) –°–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –Ω–∏–∫ –∏ –∞–≤–∞—Ç–∞—Ä–∫—É (–Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–ø—Ä–∞–≤–∞ –æ—Ç –±–∞–ª–∞–Ω—Å–∞).\n2) –í –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å".\n3) –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏. \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}')
            else:
                pass
        if message.content.startswith('.–æ–±–Ω–æ–≤–∞'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ CS2 —Å–ª–æ–º–∞–ª–æ —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–æ–≤. –ù—É–∂–Ω–æ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∏ –±–∞–≥–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ üíï \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}")
            else:
                pass

        if message.content.startswith('.–∂–∞–ª–æ–±–∞'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f"–°–ø–∞—Å–∏–±–æ! –ü–µ—Ä–µ–¥–∞–ª–∏ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏! \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}")
            else:
                pass

        if message.content.startswith('.–±–∞–≥'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f"–°–ø–∞—Å–∏–±–æ! –ü–µ—Ä–µ–¥–∞–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É! \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}")
            else:
                pass
            

        if message.content.startswith('.–∫–æ–∏–Ω—ã'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f"–ö–æ–∏–Ω—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö.\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Ö –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !shop –Ω–∞ –ª—é–±–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞. \n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}")
            else:
                pass
        
        if message.content.startswith('.—Å–æ—Ü—Å–µ—Ç–∏'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f"–í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–æ—Ü. —Å–µ—Ç–∏:\n\nDiscord: <https://ds.yooma.su>\nTelegram: <https://t.me/yoomasu>\n–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: <https://vk.com/yoomasu>\n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}")
            else:
                pass
        
        if message.content.startswith('.–ø—Ä–æ–º–æ–≤–≤–æ–¥'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f'–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å–≤–æ—é –∞–≤–∞—Ç–∞—Ä–∫—É –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —Å–∞–π—Ç–∞ –∏ –≤—ã–±—Ä–∞—Ç—å "–≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥".\n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}')
            else:
                pass
        
        if message.content.startswith('.–±–ª–µ–∫–¥–∂–µ–∫'):
            if message.author.name.lower() in bot.config.get('staff_members', {}):
                await message.delete()
                await message.channel.send(f'–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É, –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É !bj –≤ —á–∞—Ç –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n–ü–æc–ª–µ —ç—Ç–æ–≥–æ –≤ —á–∞—Ç–µ –ø–æ—è–≤–∏—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É. –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–¥–µ–ª–∏—Ç—å –µ–µ –º—ã—à–∫–æ–π –∏ –Ω–∞–∂–∞—Ç—å –ü–ö–ú, –∑–∞—Ç–µ–º "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç".\n–î–∞–ª–µ–µ –∑–∞–π—Ç–∏ –≤ –æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä (–∏–ª–∏ –≤ Steam –±—Ä–∞—É–∑–µ—Ä) –∏ –≤–≤–µ—Å—Ç–∏ —ç—Ç—É —Å—Å—ã–ª–∫—É —Ç—É–¥–∞, –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∏–≥—Ä–∞\n\n-# –û—Ç–ø—Ä–∞–≤–∏–ª - {message.author.name}')
            else:
                pass

    async def claim_ticket(self, message):
        user = message.author
        channel = message.channel
        self.ticket_counter += 1

        with open(self.config_file, 'w') as f:
            self.config['ticket_counter'] = self.ticket_counter
            json.dump(self.config, f, indent=4)

        ticket_channel = message.channel
        staff_members = bot.config.get('staff_members', {})
        staff_member_name = staff_members.get(user.name.lower(), {}).get('name', 'unknown')
        await ticket_channel.edit(name=f"{staff_member_name.lower()}-ticket-{ticket_channel.name.split('-')[-1]}")


        staff_members = self.config.get('staff_members', {})
        staff_members[user.name.lower()]['claimed_tickets'] = staff_members[user.name.lower()].get('claimed_tickets', []) + [ticket_channel.id]
        staff_members[user.name.lower()]['claimed_ticket_users'] = staff_members[user.name.lower()].get('claimed_ticket_users', {})
        staff_members[user.name.lower()]['claimed_ticket_users'][ticket_channel.id] = user.name.lower()
        self.config['staff_members'] = staff_members
        with open(self.config_file, 'w') as f:
            json.dump({str(k): v for k, v in self.config.items()}, f, indent=4, )

        info_embed = disnake.Embed(
            description=f"–£—Å–ø–µ—à–Ω–æ –≤–∑—è–ª—Å—è –∑–∞ —Ç–∏–∫–µ—Ç - {user.mention}",
            color=disnake.Color.from_rgb(251, 254, 50)
        )
        await ticket_channel.send(embed=info_embed)

    async def close_ticket(self, message):  
        channel = message.channel
        user = message.author
        if "ticket" not in channel.name.lower():
            await message.channel.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å–ª–æ–≤–æ 'ticket'!")
            return
        staff_members = self.config.get('staff_members', {})
        ticket_claimer = None
        for staff_member, stats in staff_members.items():
            if channel.id in stats.get('claimed_tickets', []):
                ticket_claimer = staff_member
                break
        if ticket_claimer:
            staff_members[ticket_claimer]['closed_tickets'] = staff_members[ticket_claimer].get('closed_tickets', 0) + 1
            self.config['staff_members'] = staff_members
            with open(self.config_file, 'w') as f:
                json.dump(self.config, f, indent=4)

            current_date = datetime.date.today().isoformat()
            if current_date not in self.config.get('date_stats', {}):
                self.config['date_stats'][current_date] = {}
            self.config['date_stats'][current_date][ticket_claimer] = self.config['date_stats'][current_date].get(ticket_claimer, 0) + 1
            with open(self.config_file, 'w') as f:
                json.dump(self.config, f, indent=4)

            embed1 = disnake.Embed(
                description=f"–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç - {user.mention}",
                color=disnake.Color.from_rgb(251, 254, 50)
            )
            embed2 = disnake.Embed(
                description=f"–¢–∏–∫–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥",
                color=disnake.Color.from_rgb(239, 82, 80)
            )
            await channel.send(embed=embed1)
            await channel.send(embed=embed2)
            await asyncio.sleep(4)
            await channel.delete()

    async def on_interaction(self, interaction: disnake.Interaction):
        if interaction.type == disnake.InteractionType.component:
            if interaction.data.custom_id == 'create_ticket': # type: ignore
                await self.create_ticket(interaction)
            elif interaction.component.custom_id == 'vip_service': # type: ignore
                embed = disnake.Embed(
                    title="–¶–µ–Ω—ã –Ω–∞ VIP",
                    description="–¶–µ–Ω—ã –Ω–∞ VIP —É—Å–ª—É–≥–∏:",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                
                vip_prices = bot.config.get('prices', {}).get('vip', {})
                vip_description = f"Medium - {vip_prices.get('medium', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                vip_description += f"Platinum - {vip_prices.get('platinum', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                vip_description += f"Crystal - {vip_prices.get('crystal', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                vip_description += f"Crystal+ - {vip_prices.get('crystal+', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                vip_description += "\n"
                if vip_prices.get('medium') and vip_prices.get('platinum'):
                    medium_price = vip_prices.get('medium', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    platinum_price = vip_prices.get('platinum', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if medium_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and platinum_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        vip_description += f"**–î–æ–∫—É–ø —Å Medium –Ω–∞ Platinum:** {int(platinum_price) - int(medium_price)}—Ä\n"
                vip_description += "\n"
                if vip_prices.get('medium') and vip_prices.get('crystal'):
                    medium_price = vip_prices.get('medium', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    crystal_price = vip_prices.get('crystal', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if medium_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and crystal_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        vip_description += f"**–î–æ–∫—É–ø —Å Medium –Ω–∞ Crystal:** {int(crystal_price) - int(medium_price)}—Ä\n"
                vip_description += "\n"
                if vip_prices.get('platinum') and vip_prices.get('crystal'):
                    platinum_price = vip_prices.get('platinum', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    crystal_price = vip_prices.get('crystal', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if platinum_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and crystal_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        vip_description += f"**–î–æ–∫—É–ø —Å Platinum –Ω–∞ Crystal:** {int(crystal_price) - int(platinum_price)}—Ä\n"
                vip_description += "\n"
                if vip_prices.get('crystal') and vip_prices.get('crystal+'):
                    crystal_price = vip_prices.get('crystal', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    crystal_plus_price = vip_prices.get('crystal+', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if crystal_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and crystal_plus_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        vip_description += f"**–î–æ–∫—É–ø —Å Crystal –Ω–∞ Crystal+:** {int(crystal_plus_price) - int(crystal_price)}—Ä\n"
                embed.add_field(name="–í–ò–ü", value=vip_description, inline=False)
                await interaction.response.send_message(embed=embed, ephemeral=True)
            
            elif interaction.component.custom_id == 'admin_service': # type: ignore
                embed = disnake.Embed(
                    title="–¶–µ–Ω—ã –Ω–∞ –ê–î–ú",
                    description="–¶–µ–Ω—ã –Ω–∞ –ê–î–ú —É—Å–ª—É–≥–∏:",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                admin_prices = bot.config.get('prices', {}).get('admin', {})
                admin_description = f"1lvl - {admin_prices.get('1lvl', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                admin_description += f"2lvl - {admin_prices.get('2lvl', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                admin_description += f"Sponsor - {admin_prices.get('sponsor', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                admin_description += "\n"
                if admin_prices.get('1lvl') and admin_prices.get('2lvl'):
                    admin_1lvl_price = admin_prices.get('1lvl', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    admin_2lvl_price = admin_prices.get('2lvl', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if admin_1lvl_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and admin_2lvl_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        admin_description += f"**–î–æ–∫—É–ø —Å 1lvl –Ω–∞ 2lvl:** {int(admin_2lvl_price) - int(admin_1lvl_price)}—Ä\n"
                admin_description += "\n"
                if admin_prices.get('1lvl') and admin_prices.get('sponsor'):
                    admin_1lvl_price = admin_prices.get('1lvl', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    sponsor_price = admin_prices.get('sponsor', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if admin_1lvl_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and sponsor_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        admin_description += f"**–î–æ–∫—É–ø —Å 1lvl –Ω–∞ Sponsor:** {int(sponsor_price) - int(admin_1lvl_price)}—Ä\n"
                admin_description += "\n"
                if admin_prices.get('2lvl') and admin_prices.get('sponsor'):
                    admin_2lvl_price = admin_prices.get('2lvl', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    sponsor_price = admin_prices.get('sponsor', '–ù–µ—Ç —Ü–µ–Ω—ã').replace('—Ä', '').replace('.', '')
                    if admin_2lvl_price != '–ù–µ—Ç —Ü–µ–Ω—ã' and sponsor_price != '–ù–µ—Ç —Ü–µ–Ω—ã':
                        admin_description += f"**–î–æ–∫—É–ø —Å 2lvl –Ω–∞ Sponsor:** {int(sponsor_price) - int(admin_2lvl_price)}—Ä\n"
                embed.add_field(name="–ê–î–ú", value=admin_description, inline=False)
                await interaction.response.send_message(embed=embed, ephemeral=True)

            elif interaction.component.custom_id == 'services':  # type: ignore
                embed = disnake.Embed(
                    title="–¶–µ–Ω—ã –Ω–∞ –°–ï–†–í–ò–°–´",
                    description="–¶–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–∏—Å—ã:",
                    color=disnake.Color.from_rgb(119, 137, 253)
                )
                services_prices = bot.config.get('prices', {}).get('services', {})
                services_description = f"**–ü–µ—Ä–µ–Ω–æ—Å –≤–∏–ø/–∞–¥–º:** {services_prices.get('transfer', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                services_description += f"**–†–∞–∑–º–æ—Ä–æ–∑–∫–∞ –ø—Ä–∞–≤ 1–ª–≤–ª:** {services_prices.get('unfreeze_admin_1', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                services_description += f"**–†–∞–∑–º–æ—Ä–æ–∑–∫–∞ –ø—Ä–∞–≤ 2–ª–≤–ª:** {services_prices.get('unfreeze_admin_2lvl', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                services_description += f"**–†–∞–∑–º–æ—Ä–æ–∑–∫–∞ –ø—Ä–∞–≤ —Å–ø–æ–Ω—Å–æ—Ä–∞:** {services_prices.get('unfreeze_sponsor', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"
                services_description += f"**–†–∞–∑–º—É—Ç –≤ —á–∞—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ:** {services_prices.get('unmute_site', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"  # –ù–æ–≤–∞—è —É—Å–ª—É–≥–∞
                services_description += f"**–†–∞–∑–±–∞–Ω –≤ –¥–∏—Å–∫–æ—Ä–¥–µ:** {services_prices.get('unban_ds', '–ù–µ—Ç —Ü–µ–Ω—ã')}\n"           # –ù–æ–≤–∞—è —É—Å–ª—É–≥–∞
                
                embed.add_field(name="–°–ï–†–í–ò–°–´", value=services_description, inline=False)
                await interaction.response.send_message(embed=embed, ephemeral=True)
    
    async def create_ticket(self, interaction: disnake.Interaction):
        if interaction.user.name.lower() in self.config.get('dev_members', {}):
            pass
        elif interaction.user.name.lower() in self.config.get('staff_members', {}):
            await interaction.response.send_message(":x: / –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–∏–∫–µ—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º.", ephemeral=True) # type: ignore
            return
        await interaction.response.defer()
        creating_ticket_msg = await interaction.followup.send(f":small_blue_diamond:  / **–°–æ–∑–¥–∞—é —Ç–∏–∫–µ—Ç...**", ephemeral=True)
        user = interaction.user
        creator_id = interaction.user.id
        guild = interaction.guild
        category = guild.get_channel(self.CATEGORY_ID) # type: ignore
        self.ticket_counter += 1
        
        with open(self.config_file, 'w') as f:
            self.config['ticket_counter'] = self.ticket_counter
            json.dump(self.config, f, indent=4)

        with open('created_tickets.json', 'r+') as f:
            try:
                created_tickets = json.load(f)
            except json.JSONDecodeError:
                created_tickets = {}

            user_name = interaction.user.name.replace('.', '') 
            if user_name in created_tickets and created_tickets[user_name].get('banned_until'):
                banned_until = created_tickets[user_name]['banned_until']
                banned_by = created_tickets[user_name].get('banned_by', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                if banned_until > datetime.datetime.now().timestamp():
                    await creating_ticket_msg.edit(rf":small_orange_diamond:  \ –í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ —Ç–∏–∫–µ—Ç–∞—Ö –¥–æ **{datetime.datetime.fromtimestamp(banned_until).strftime('%Y-%m-%d %H:%M:%S')}**–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≤–∞—Å: {banned_by}") # type: ignore
                    return
                else:
                    del created_tickets[user_name]['banned_until']
                    del created_tickets[user_name]['banned_by']
                    f.seek(0)
                    json.dump(created_tickets, f)
                    f.truncate()
            user_name = interaction.user.name.replace('.', '') 
            if user_name in created_tickets and created_tickets[user_name]['ticket_id'] is not None:
                await creating_ticket_msg.edit(rf":small_orange_diamond:  \ **–í—ã —É–∂–µ —Å–æ–∑–¥–∞–ª–∏ —Ç–∏–∫–µ—Ç**. –ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –Ω–∞—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.") # type: ignore
                return

            ticket_channel = await category.create_text_channel(f"ticket-{self.ticket_counter}") # type: ignore
            await ticket_channel.set_permissions(guild.default_role, read_messages=False) # type: ignore
            staff_roles = self.config.get('staff_roles', [])
            for role_id in staff_roles:
                role = guild.get_role(role_id) # type: ignore
                if role:
                    await ticket_channel.set_permissions(role, read_messages=True, send_messages=True, mention_everyone=True)
            await ticket_channel.set_permissions(interaction.user, read_messages=True, send_messages=True) # type: ignore
            

            created_tickets[user_name] = {'ticket_id': ticket_channel.id, 'creator_id': interaction.user.id}
            f.seek(0)
            json.dump(created_tickets, f, indent=4)
            f.truncate()

        embed = disnake.Embed(
            title="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É!",
            description="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, **–æ–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–¥—Ä–æ–±–Ω–µ–µ**, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–∫–∞–∑–∞—Ç—å –≤–∞–º **–Ω–∞–∏–ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ**.\n\n"
            "‚ñé–í–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã:\n"
            "- –ù–µ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ —Ç–∏–∫–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º–µ –∏–ª–∏ –Ω–µ —Å–≤—è–∑–∞–Ω—ã —Å –æ–ø–∏—Å–∞–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π.\n"
            "- –£–∫–∞–∂–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–µ—à–∏—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n"
            "- –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤.\n\n"
            "**–ù–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–µ —ç—Ç–∏—Ö –ø—Ä–∞–≤–∏–ª –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–∞–∫–∞–∑–∞–Ω–∏—é**.",
            color=disnake.Color.from_rgb(119, 137, 253)
        )
        embed.set_author(name='Yooma Support', icon_url="https://static2.tgstat.ru/channels/_0/a1/a1f39d6ec06f314bb9ae1958342ec5fd.jpg")
        embed.set_thumbnail(url="https://static2.tgstat.ru/channels/_0/a1/a1f39d6ec06f314bb9ae1958342ec5fd.jpg")
        view = ButtonView()
        take_ticket_button = disnake.ui.Button(label='–í–∑—è—Ç—å —Ç–∏–∫–µ—Ç', style=disnake.ButtonStyle.blurple, emoji='üìù')
        close_ticket_button = disnake.ui.Button(label='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', style=disnake.ButtonStyle.red, emoji='üîí')
        view.add_item(take_ticket_button)   
        view.add_item(close_ticket_button)

        await ticket_channel.send(user.mention, embed=embed, view=view)
        current_time = datetime.datetime.now()
        primetime = self.config.get('primetime')
        if primetime:
            start_time = datetime.datetime.strptime(primetime['start'], '%H:%M').time()
            end_time = datetime.datetime.strptime(primetime['end'], '%H:%M').time()
            if start_time <= current_time.time() <= end_time:
                pass
            else:
                await ticket_channel.send(f"{interaction.user.mention}, –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è, –∏ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —á–µ–º –æ–±—ã—á–Ω–æ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ —Å–≤—è–∑–∏, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å–º–æ–∂–µ–º.")
        else:
            pass    
        await creating_ticket_msg.edit(rf":tickets:  \ **–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω - **{ticket_channel.mention}") # type: ignore

        take_ticket_lock = asyncio.Lock()

        async def take_ticket_callback(interaction: disnake.Interaction):
            user = interaction.user
            self.ticket_claimer_id = interaction.user.id # type: ignore
            staff_members = bot.config.get('staff_members', {})

            if user.name.lower() not in staff_members:
                await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.", ephemeral=True)
                return

            ticket_channel = interaction.channel

            async with take_ticket_lock:
                ticket_claimed = bot.config.get('claimed_tickets', {}).get(ticket_channel.id)
                if ticket_claimed:
                    await interaction.response.send_message("–≠—Ç–æ—Ç —Ç–∏–∫–µ—Ç —É–∂–µ –≤–∑—è—Ç –¥—Ä—É–≥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º.", ephemeral=True)
                    return
                
                staff_member_name = staff_members[user.name.lower()].get('name', 'unknown')

                await ticket_channel.edit(name=f"{staff_member_name.lower()}-ticket-{ticket_channel.name.split('-')[-1]}") # type: ignore

                bot.config.setdefault('claimed_tickets', {})[ticket_channel.id] = user.name.lower()
                staff_members[user.name.lower()]['claimed_tickets'] = staff_members[user.name.lower()].get('claimed_tickets', []) + [ticket_channel.id]

                with open(bot.config_file, 'w') as f:
                    json.dump(bot.config, f, indent=4)

                await interaction.message.edit(view=None) # type: ignore
                close_button = disnake.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç", style=disnake.ButtonStyle.red, emoji='üîí')
                close_button.callback = close_ticket_callback
                view = disnake.ui.View(timeout=None)
                view.add_item(close_button)
                await interaction.message.edit(view=view) # type: ignore

                info_embed = disnake.Embed(
                    description=f"–£—Å–ø–µ—à–Ω–æ –≤–∑—è–ª—Å—è –∑–∞ —Ç–∏–∫–µ—Ç - {user.mention}",
                    color=disnake.Color.from_rgb(251, 254, 50)
                )
                await ticket_channel.send(embed=info_embed)

                await interaction.response.defer()

        async def close_ticket_callback(interaction: disnake.Interaction):
            ticket_channel = interaction.channel
            user = interaction.user

            channel_name = ticket_channel.name # type: ignore
            staff_member_name = None
            if '-' in channel_name:
                parts = channel_name.split('-')
                staff_member_name = parts[0]

            confirmation_embed = disnake.Embed(
                title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                description="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç?",
                color=disnake.Color.from_rgb(119, 137, 253)
            )

            view = ButtonView()

            view.clear_items()

            button_close = disnake.ui.Button(label='–ó–∞–∫—Ä—ã—Ç—å', style=disnake.ButtonStyle.red, emoji='üîí')
            button_close_with_reason = disnake.ui.Button(label='–ó–∞–∫—Ä—ã—Ç—å —Å –ø—Ä–∏—á–∏–Ω–æ–π', style=disnake.ButtonStyle.red, emoji='üîí')
            button_cancel = disnake.ui.Button(label='–û—Ç–º–µ–Ω–∞', style=disnake.ButtonStyle.gray, emoji='üö´')
            view.add_item(button_close)
            view.add_item(button_close_with_reason)
            view.add_item(button_cancel)
    
            await interaction.response.send_message(embed=confirmation_embed, view=view)

            async def close_callback(interaction: disnake.Interaction):
                channel = interaction.channel
                user = interaction.user
                staff_members = bot.config.get('staff_members', {})

                ticket_claimer = None
                for staff_member, stats in staff_members.items():
                    if channel.id in stats.get('claimed_tickets', []):
                        ticket_claimer = staff_member
                        break

                if ticket_claimer:
                    staff_members[ticket_claimer]['claimed_tickets'].remove(channel.id)

                    staff_members[ticket_claimer]['closed_tickets'] = staff_members[ticket_claimer].get('closed_tickets', 0) + 1
                    bot.config['staff_members'] = staff_members
                    with open(bot.config_file, 'w') as f:
                        json.dump(bot.config, f)

                    current_date = datetime.date.today().isoformat()
                    if current_date not in bot.config.get('date_stats', {}):
                        bot.config['date_stats'][current_date] = {}
                    bot.config['date_stats'][current_date][ticket_claimer] = bot.config['date_stats'][current_date].get(ticket_claimer, 0) + 1
                    with open(bot.config_file, 'w') as f:
                        json.dump(bot.config, f)

                    with open(bot.config_file, 'r') as f:
                        config = json.load(f)
                    config['ticket_counter'] -= 1
                    with open(bot.config_file, 'w') as f:
                        json.dump(config, f)

                with open('created_tickets.json', 'r+') as f:
                    try:
                        created_tickets = json.load(f)
                    except json.JSONDecodeError:
                        created_tickets = {}

                    for user_name, ticket_info in created_tickets.items():
                        if ticket_info['ticket_id'] == channel.id:
                            if ticket_claimer:
                                creator = bot.get_user(ticket_info['creator_id']) or await bot.fetch_user(ticket_info['creator_id'])
                                if creator:
                                    server_name = "yooma.su"
                                    ticket_id = f"**#{channel.name.split('-')[-1]}**" #type: ignore
                                    opened_by = creator.mention
                                    closed_by = interaction.user.mention
                                    embed = disnake.Embed(
                                        title="–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç",
                                        timestamp=datetime.datetime.now(),
                                        color=disnake.Color.from_rgb(119, 137, 253)
                                    )
                                    embed.add_field(name=":id: Ticket ID", value=ticket_id, inline=True)
                                    embed.add_field(name=":unlock: –û—Ç–∫—Ä—ã–ª", value=opened_by, inline=True)
                                    embed.add_field(name=":lock: –ó–∞–∫—Ä—ã–ª", value=closed_by, inline=True)
                                    embed.add_field(name="", value="", inline=False)
                                    embed.add_field(name=":mag_right: –í–∑—è–ª —Ç–∏–∫–µ—Ç", value=f"<@{staff_members[ticket_claimer]['id']}>", inline=True)
                                    embed.add_field(name="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", value="", inline=False)
                                    embed.set_author(name=server_name, icon_url="https://static2.tgstat.ru/channels/_0/a1/a1f39d6ec06f314bb9ae1958342ec5fd.jpg")

                                    thumbs_down = disnake.ui.Button(label='', style=disnake.ButtonStyle.red, emoji='üëéüèª')
                                    thumbs_up = disnake.ui.Button(label='', style=disnake.ButtonStyle.green, emoji='üëçüèª')

                                    view = ButtonView()
                                    view.add_item(thumbs_down)
                                    view.add_item(thumbs_up)

                                    async def like_callback(interaction):
                                        if ticket_claimer not in staff_members:
                                            staff_members[ticket_claimer] = {'likes': 0, 'dislikes': 0}
                                            
                                        if 'likes' not in staff_members[ticket_claimer]:
                                            staff_members[ticket_claimer]['likes'] = 0
                                        staff_members[ticket_claimer]['likes'] += 1 

                                        bot.config['staff_members'] = staff_members 
                                        with open(bot.config_file, 'w') as f: 
                                            json.dump(bot.config, f) 

                                        await interaction.message.edit(view=None)
                                        await interaction.response.send_message("–í–∞—à üëçüèª –±—ã–ª —É—á—Ç—ë–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!", ephemeral=True)

                                        user_id = bot.config['staff_members'][ticket_claimer]['id']
                                        user = bot.get_user(int(user_id)) or await bot.fetch_user(int(user_id))
                                        if user:
                                            if bot.config.get('alert_settings', {}).get(ticket_claimer, False):
                                                await user.send(f"–í–∞–º –ø–æ—Å—Ç–∞–≤–∏–ª–∏: üëçüèª . –ü–æ—Å—Ç–∞–≤–∏–ª –æ—Ü–µ–Ω–∫—É {interaction.user.mention}")
                                        else:
                                            pass

                                    async def dislike_callback(interaction):
                                        if ticket_claimer not in staff_members:
                                            staff_members[ticket_claimer] = {'likes': 0, 'dislikes': 0}
                                            
                                        if 'dislikes' not in staff_members[ticket_claimer]:
                                            staff_members[ticket_claimer]['dislikes'] = 0
                                        staff_members[ticket_claimer]['dislikes'] += 1 

                                        bot.config['staff_members'] = staff_members 
                                        with open(bot.config_file, 'w') as f: 
                                            json.dump(bot.config, f) 

                                        await interaction.message.edit(view=None)
                                        await interaction.response.send_message("–í–∞—à üëéüèª –±—ã–ª —É—á—Ç—ë–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!", ephemeral=True)
                                        user_id = bot.config['staff_members'][ticket_claimer]['id']
                                        user = bot.get_user(int(user_id)) or await bot.fetch_user(int(user_id))
                                        if user:
                                            if bot.config.get('alert_settings', {}).get(ticket_claimer, False):
                                                await user.send(f"–í–∞–º –ø–æ—Å—Ç–∞–≤–∏–ª–∏: üëéüèª . –ü–æ—Å—Ç–∞–≤–∏–ª –æ—Ü–µ–Ω–∫—É {interaction.user.mention}")
                                        else:
                                            pass
                                    thumbs_down.callback = dislike_callback
                                    thumbs_up.callback = like_callback
                                    await creator.send(embed=embed, view=view)
                            del created_tickets[user_name]
                            f.seek(0)
                            json.dump(created_tickets, f)
                            f.truncate()
                            break

                embed1 = disnake.Embed(
                    description=f"–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç - {user.mention}",
                    color=disnake.Color.from_rgb(251, 254, 50)
                )
                embed2 = disnake.Embed(
                    description=f"–¢–∏–∫–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥",
                    color=disnake.Color.from_rgb(239, 82, 80)
                )
                await interaction.response.defer()
                await interaction.message.delete() # type: ignore # type: ignore
                await channel.send(embed=embed1)
                await channel.send(embed=embed2)
                await asyncio.sleep(4)
                await channel.delete() # type: ignore
                
            
            async def close_with_reason_callback(interaction: disnake.Interaction):
                staff_members = bot.config.get('staff_members', {}) 
                if interaction.user.name.lower() not in staff_members:
                    await interaction.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.", ephemeral=True)
                    return
                else:
                    user = interaction.user
                    staff_members = bot.config.get('staff_members', {})

                    current_date = datetime.date.today().isoformat()
                    if current_date not in bot.config.get('date_stats', {}):
                        bot.config['date_stats'][current_date] = {}
                    bot.config['date_stats'][current_date][user.name.lower()] = bot.config['date_stats'][current_date].get(user.name.lower(), 0) + 1
                    staff_members[user.name.lower()]['closed_tickets'] = staff_members[user.name.lower()].get('closed_tickets', 0) + 1
                    bot.config['staff_members'] = staff_members
                    with open(bot.config_file, 'w') as f:
                        json.dump(bot.config, f)
                    await interaction.response.send_modal(
                        title="–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞",
                        custom_id="close_with_reason",
                        components=[
                            disnake.ui.TextInput(
                                style=disnake.TextInputStyle.paragraph,
                                label="–ü—Ä–∏—á–∏–Ω–∞",
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞",
                                custom_id="reason",
                            )
                        ]
                    )


            @bot.event
            async def on_modal_submit(interaction: disnake.ModalInteraction):
                if interaction.data.custom_id == "close_with_reason":
                    for component in interaction.data['components'][0]['components']:
                        if component['custom_id'] == 'reason':
                            reason = component['value']
                            break

                    channel = interaction.channel
                    user = interaction.user
                    staff_members = bot.config.get('staff_members', {})

                    ticket_claimer = None
                    for staff_member, stats in staff_members.items():
                        if channel.id in stats.get('claimed_tickets', []):
                            ticket_claimer = staff_member
                            break

                    if ticket_claimer:
                        staff_members[ticket_claimer]['claimed_tickets'].remove(channel.id)

                        #staff_members[ticket_claimer]['closed_tickets'] = staff_members[ticket_claimer].get('closed_tickets', 0) + 1
                        bot.config['staff_members'] = staff_members
                        with open(bot.config_file, 'w') as f:
                            json.dump(bot.config, f)

                        current_date = datetime.date.today().isoformat()
                        if current_date not in bot.config.get('date_stats', {}):
                            bot.config['date_stats'][current_date] = {}
                        #bot.config['date_stats'][current_date][ticket_claimer] = bot.config['date_stats'][current_date].get(ticket_claimer, 0) + 1
                        with open(bot.config_file, 'w') as f:
                            json.dump(bot.config, f)

                        with open(bot.config_file, 'r') as f:
                            config = json.load(f)
                        #config['ticket_counter'] -= 1
                        with open(bot.config_file, 'w') as f:
                            json.dump(config, f)

                    with open('created_tickets.json', 'r+') as f:
                        try:
                            created_tickets = json.load(f)
                        except json.JSONDecodeError:
                            created_tickets = {}

                        for user_name, ticket_info in created_tickets.items():
                            if ticket_info['ticket_id'] == channel.id:
                                if ticket_claimer:
                                    creator = bot.get_user(ticket_info['creator_id']) or await bot.fetch_user(ticket_info['creator_id'])
                                    server_name = "yooma.su"
                                    ticket_id = f"**#{channel.name.split('-')[-1]}**" #type: ignore
                                    opened_by = creator.mention
                                    closed_by = interaction.user.mention
                                    claimed_by = ticket_claimer
                                    embed = disnake.Embed(
                                        title="–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç",
                                        timestamp=datetime.datetime.now(),
                                        color=disnake.Color.from_rgb(119, 137, 253)
                                    )
                                    embed.add_field(name=":id: Ticket ID", value=ticket_id, inline=True)
                                    embed.add_field(name=":unlock: –û—Ç–∫—Ä—ã–ª", value=opened_by, inline=True)
                                    embed.add_field(name=":lock: –ó–∞–∫—Ä—ã–ª", value=closed_by, inline=True)
                                    embed.add_field(name="", value="", inline=False)
                                    embed.add_field(name=":mag_right: –í–∑—è–ª —Ç–∏–∫–µ—Ç", value=f"<@{staff_members[ticket_claimer]['id']}>", inline=True)
                                    embed.add_field(name=":pencil: –°–æ–æ–±—â–µ–Ω–∏–µ", value=reason, inline=False)
                                    embed.add_field(name="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", value="", inline=False)
                                    embed.set_author(name=server_name, icon_url="https://static2.tgstat.ru/channels/_0/a1/a1f39d6ec06f314bb9ae1958342ec5fd.jpg")

                                    thumbs_down = disnake.ui.Button(label='', style=disnake.ButtonStyle.red, emoji='üëéüèª')
                                    thumbs_up = disnake.ui.Button(label='', style=disnake.ButtonStyle.green, emoji='üëçüèª')

                                    view = ButtonView()
                                    view.add_item(thumbs_down)
                                    view.add_item(thumbs_up)

                                    async def like_callback(interaction):
                                        if ticket_claimer not in staff_members:
                                            staff_members[ticket_claimer] = {'likes': 0, 'dislikes': 0}
                                        
                                        if 'likes' not in staff_members[ticket_claimer]:
                                            staff_members[ticket_claimer]['likes'] = 0
                                        staff_members[ticket_claimer]['likes'] += 1 

                                        bot.config['staff_members'] = staff_members 
                                        with open(bot.config_file, 'w') as f: 
                                            json.dump(bot.config, f) 

                                        await interaction.message.edit(view=None)
                                        await interaction.response.send_message("–í–∞—à üëçüèª –±—ã–ª —É—á—Ç—ë–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!", ephemeral=True)

                                    async def dislike_callback(interaction):
                                        if ticket_claimer not in staff_members:
                                            staff_members[ticket_claimer] = {'likes': 0, 'dislikes': 0}
                                        
                                        if 'dislikes' not in staff_members[ticket_claimer]:
                                            staff_members[ticket_claimer]['dislikes'] = 0
                                        staff_members[ticket_claimer]['dislikes'] += 1 

                                        bot.config['staff_members'] = staff_members 
                                        with open(bot.config_file, 'w') as f: 
                                            json.dump(bot.config, f) 

                                        await interaction.message.edit(view=None)
                                        await interaction.response.send_message("–í–∞—à üëéüèª –±—ã–ª —É—á—Ç—ë–Ω. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!", ephemeral=True)
                                    thumbs_down.callback = dislike_callback
                                    thumbs_up.callback = like_callback
                                    await creator.send(embed=embed, view=view)
                                del created_tickets[user_name]
                                f.seek(0)
                                json.dump(created_tickets, f)
                                f.truncate()
                                break

                    embed1 = disnake.Embed(
                        description=f"–¢–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç - {user.mention}",
                        color=disnake.Color.from_rgb(251, 254, 50)
                    )
                    embed2 = disnake.Embed(
                        description=f"–¢–∏–∫–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥",
                        color=disnake.Color.from_rgb(239, 82, 80)
                    )
                    await interaction.response.defer()
                    await interaction.message.delete() # type: ignore
                    await channel.send(embed=embed1)
                    await channel.send(embed=embed2)
                    await asyncio.sleep(4)
                    await channel.delete() # type: ignore
                
            async def cancel_callback(interaction: disnake.Interaction):
                await interaction.message.delete() # type: ignore     

            button_close_with_reason.callback = close_with_reason_callback
            button_close.callback = close_callback
            button_cancel.callback = cancel_callback


        take_ticket_button.callback = take_ticket_callback
        close_ticket_button.callback = close_ticket_callback

bot = PersistentViewBot(activity=disnake.Activity(type=disnake.ActivityType.competing, name="yooma.su"))

if __name__ == "__main__":
    bot.run("MTI3Mzk1NzgzNTI1MTc4MTY0Mg.GQXk0n.2okk4H31AB54DXaa7bllRyMdyp7cK61IcS3MJo")